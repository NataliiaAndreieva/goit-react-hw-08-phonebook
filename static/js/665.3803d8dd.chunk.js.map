{"version":3,"file":"static/js/665.3803d8dd.chunk.js","mappings":"yRAGaA,EAAYC,EAAAA,EAAAA,IAAH,uEAKTC,EAAcD,EAAAA,EAAAA,EAAH,mEAKXE,EAAMF,EAAAA,EAAAA,IAAH,0GAOHG,GAAOH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,mO,+JClBJK,EAAOL,EAAAA,EAAAA,KAAH,2GAOJM,EAAQN,EAAAA,EAAAA,MAAH,sGAOLO,EAAQP,EAAAA,EAAAA,MAAH,qKASLQ,EAASR,EAAAA,EAAAA,OAAH,+Q,sECvBNS,E,QAAQT,EAAAA,GAAH,6G,SCelB,MAdA,YAAuC,IAApBU,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,gCACE,SAACF,EAAD,UAAQC,IACPC,IAGN,C,8ECRYC,EAAkB,SAAAC,GAC7BC,IAAAA,OAAAA,QAAwB,UAAWD,EACpC,EAEDC,IAAAA,OAAAA,KAAqB,CACnBC,QAAS,OACTC,gBAAiB,OACjBC,QAAS,CACPC,SAAU,UAEVC,iBAAkB,UAClBC,iBAAkB,qB,4ICLTC,EAAe,WAAO,IAAD,IAC1BC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAwB1B,OACE,UAAC,KAAD,YACE,UAAC,KAAD,CAAMC,SAxBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACf,EAAkCD,EAAKE,SAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAEjBA,EAASC,MAAMC,OAAS,GAC1BzB,EAAAA,EAAAA,GAAgB,gLAMlBU,GACEgB,EAAAA,EAAAA,IAAS,CACPL,KAAMA,EAAKG,MACXF,MAAOA,EAAME,MACbD,SAAUA,EAASC,SAGvBN,EAAKS,QACN,EAIG,WACE,UAAC,KAAD,kCAEE,SAAC,KAAD,CAAOC,KAAK,OAAOP,KAAK,OAAOQ,IAAI,UAErC,UAAC,KAAD,6CAEE,SAAC,KAAD,CAAOD,KAAK,OAAOP,KAAK,cAE1B,UAAC,KAAD,mDAEE,SAAC,KAAD,CAAOO,KAAK,WAAWP,KAAK,iBAE9B,SAAC,KAAD,CAAQO,KAAK,SAAb,8EAEI,OAALhB,QAAK,IAALA,GAAA,UAAAA,EAAOkB,gBAAP,mBAAiBC,YAAjB,eAAuBV,QACtBrB,EAAAA,EAAAA,GAAgB,mJAGvB,E,UC5CD,EARiB,WACf,OACE,SAACgC,EAAA,EAAD,CAASlC,MAAO,+DAAhB,UACE,SAACW,EAAD,KAGL,C","sources":["components/HomeDescription/HomeDescription.styled.js","components/RegisterForm/RegisterForm.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/helped/getNotification.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding-left: 50px;\n  padding-right: 50px;\n`;\n\nexport const Description = styled.p`\n  font-size: 20px;\n  text-align: center;\n`;\n\nexport const Nav = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 100px;\n  margin-top: 50px;\n`;\n\nexport const Link = styled(NavLink)`\n  width: 120px;\n  text-align: center;\n  font-size: 18px;\n  border: 2px solid #1e90ff;\n  border-radius: 5px;\n  padding: 10px 0;\n  &:hover {\n    color: #000000;\n    background-color: #1e90ff;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 7px;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  height: 35px;\n  width: 300px;\n  font-size: 18px;\n  background-color: transparent;\n  border: 2px solid #1e90ff;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  text-align: center;\n\n  width: 120px;\n  font-size: 18px;\n\n  background-color: transparent;\n\n  border: 2px solid #1e90ff;\n  border-radius: 5px;\n\n  padding: 10px 0;\n\n  &:hover {\n    color: #000000;\n    background-color: #1e90ff;\n  }\n`;\n\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  color: #1e90ff;\n  text-align: center;\n  margin: 0 0 30px 0;\n`;\n\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import Notiflix from 'notiflix';\n\nexport const getNotification = message => {\n  Notiflix.Report.warning('Warning', message);\n};\n\nNotiflix.Report.init({\n  svgSize: '50px',\n  messageFontSize: '20px',\n  warning: {\n    svgColor: '#44728f',\n\n    buttonBackground: '#44728f',\n    backOverlayColor: 'rgba(0,0, 0,0.2)',\n  },\n});\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { register } from 'redux/auth/operationAuth';\nimport { getError } from 'redux/auth/selectorsAuth';\nimport  {getNotification}  from 'components/helped/getNotification';\nimport { Container } from 'components/HomeDescription/HomeDescription.styled';\nimport { Button, Form, Input, Label } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const { name, email, password } = form.elements;\n\n    if (password.value.length < 7) {\n      getNotification(\n        `Пароль має бути хоча б з 7 символів.`\n      );\n      return;\n    }\n\n    dispatch(\n      register({\n        name: name.value,\n        email: email.value,\n        password: password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Ім'я\n          <Input type=\"text\" name=\"name\" min=\"6\" />\n        </Label>\n        <Label>\n          Пошта\n          <Input type=\"text\" name=\"email\" />\n        </Label>\n        <Label>\n          Пароль\n          <Input type=\"password\" name=\"password\" />\n        </Label>\n        <Button type=\"submit\">Реєстрація</Button>\n      </Form>\n      {error?.response?.data?.name &&\n        getNotification('Ця пошта вже зареєстрована')}\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport  Section  from 'components/Section';\n\nconst Register = () => {\n  return (\n    <Section title={'Реєстрація'}>\n      <RegisterForm />\n    </Section>\n  );\n};\n\nexport default Register;\n"],"names":["Container","styled","Description","Nav","Link","NavLink","Form","Label","Input","Button","Title","title","children","getNotification","message","Notiflix","svgSize","messageFontSize","warning","svgColor","buttonBackground","backOverlayColor","RegisterForm","dispatch","useDispatch","error","useSelector","getError","onSubmit","e","preventDefault","form","currentTarget","elements","name","email","password","value","length","register","reset","type","min","response","data","Section"],"sourceRoot":""}